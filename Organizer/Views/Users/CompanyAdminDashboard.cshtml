@model Organizer.Entities.User

@{
    ViewData["Title"] = "Create";
    var UserId = @User.FindFirst("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;
    var Email = @User.FindFirst("preferred_username")?.Value;
    var FullName = @User.FindFirst("name")?.Value;
    var Tenant_Id = @User.FindFirst("http://schemas.microsoft.com/identity/claims/tenantid")?.Value;
    Console.WriteLine(UserId);
    Console.WriteLine(Email);
    Console.WriteLine(FullName);
    Console.WriteLine(Tenant_Id);


}

<h1>Create</h1>

<h4>User</h4>
<hr />

<div class="row hidden">
    <div class="col-md-4">
        <form asp-action="Create" id="taskForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" value="@FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            <div type="hidden" class="hidden form-group">
                <label asp-for="Tenant_Id" type="hidden" class="control-label"></label>
                <input asp-for="Tenant_Id" type="hidden" value="@Tenant_Id" class="form-control" />
                <span asp-validation-for="Tenant_Id" type="hidden" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" value="@Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div  class="hidden form-group">
                <label asp-for="Id"  class="control-label"></label>
                <input asp-for="Id"  value="@UserId" class="form-control" />
                <span asp-validation-for="Id"  class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" id="submitBtn" />
            </div>
        </form>
    </div>
</div>
<button id="SubmitButton" onclick="deleteTask()">test</button>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        window.onload = function () {
            var button = document.getElementById("SubmitButton");
            setTimeout(function () {
                button.click();
            }, 2000);
            
        };
        const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;

        const formData = new FormData(taskForm);
    
            function deleteTask() {
                fetch('@Url.Action("Create", "Users")', {
                    method: 'POST', // Use POST method to send data

                body: formData // Convert the data object to a JSON string
                })
                    .then(response => {
                        if (response.ok) {
                            console.log('Data sent successfully!');
                            return response.json();
                        } else {
                            // Request failed
                            console.error('Failed to send data');
                        }
                    })
                    .then(data => {
                        console.log(data); // Log response data
                        // Optionally, you can update the UI or display a success message
                    })
                    .catch(error => {
                        // Handle any errors that occurred during the request
                        console.error('Error:', error);
                    });
            }
    </script>
}
