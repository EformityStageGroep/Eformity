


@model Organizer.Entities.User

@{
    ViewData["Title"] = "Create";
    var UserId = @User.FindFirst("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;
    Console.WriteLine(UserId);
}

<h1>You are SuperAdmin!</h1>

<h1>Create</h1>

<h4>User</h4>
<hr />

<button onclick="deleteTask()">test</button>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
   
        function deleteTask() {
            // Get the CSRF token from the form
            console.log(data);

            // Send a POST request with the task ID and CSRF token
            fetch(`/Users/Create`, {
                method: 'POST', // Use POST method to send data
                headers: {
                    'Content-Type': 'application/json' // Specify the content type as JSON
                },
                body: JSON.stringify(data) // Convert the data object to a JSON string
            })
                .then(response => {
                    // Handle the response from the server
                    if (response.ok) {
                        // Request was successful
                        console.log('Data sent successfully!');
                        // You can also handle the response as needed
                        return response.json();
                    } else {
                        // Request failed
                        console.error('Failed to send data');
                    }
                })
                .catch(error => {
                    // Handle any errors that occurred during the request
                    console.error('Error:', error);
                });
         
        }
        
       
    </script>
}
