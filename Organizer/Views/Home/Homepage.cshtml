@{
    ViewData["Title"] = "Homepage";

}
@* <div class="max-w-md  min-w-40 mx-auto bg-white border border-gray-200 shadow-md overflow-hidden cursor-pointer hover:transform hover:scale-105 duration-300">
    <div class="md:flex">
        <div class="p-8">
            <div class="uppercase tracking-wide text-sm text-indigo-500 font-semibold">Facebook</div>
            <a href="#" class="block mt-1 text-lg leading-tight font-medium text-black hover:underline">Answer customer enquiries </a>
            <p class="mt-2 text-gray-500">16:00 16-09-2024</p>
        </div>
    </div>
</div>
 *@
<div id="modal" class="fixed inset-0 z-50 hidden overflow-y-auto flex items-center justify-center">
    <div class="fixed inset-0 transition-opacity" aria-hidden="true">
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
    </div>
    <div class="bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:max-w-lg sm:w-full">
        <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
            <div class="sm:flex sm:items-start">
                <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                    <h3 class="text-lg font-medium leading-6 text-gray-900" id="modalTitle">
                        Create Task
                    </h3>
                    <div class="mt-2">
                        <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
                        <input type="text" name="title" id="title" class="mt-1 focus:ring-indigo-500 border focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                    </div>
                    <div class="mt-2">
                        <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
                        <textarea id="description" name="description" rows="3" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full border shadow-sm sm:text-sm border-gray-300 rounded-md"></textarea>
                    </div>
                    <div class="mt-2">
                        <label for="priority" class="block text-sm font-medium text-gray-700">Priority</label>
                        <select id="priority" name="priority" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                            <option value="high">High</option>
                            <option value="medium">Medium</option>
                            <option value="low">Low</option>
                        </select>
                    </div>
                    <div class="mt-2">
                        <label for="datetime" class="block text-sm font-medium text-gray-700">Date and Time</label>
                        <input type="datetime-local" id="datetime" name="datetime" class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                    </div>
                </div>
            </div>
        </div>
        <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
            <button id="closeModalButton" type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm">
                Close
            </button>
            <button id="createTaskButton" type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm">
                Create Task
            </button>
        </div>
    </div>
</div>

<div class="relative border-b border-gray-200 pb-5 sm:pb-0">
    <div class="md:flex md:items-center md:justify-between">
        <h3 class="text-base font-semibold leading-6 text-gray-900">Post-it's</h3>
        <div class="mt-3 flex md:absolute md:right-0 md:top-3 md:mt-0  mr-16">
            <button type="button" class="inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">Share</button>
            <button id="openModalButton" type="button" class="ml-3 inline-flex items-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                Create
            </button>
        </div>
    </div>
    <div class="mt-4">
        <!-- Dropdown menu on small screens -->
        <div class="sm:hidden">
            <label for="current-tab" class="sr-only">Select a tab</label>
            <select id="current-tab" name="current-tab" class="block w-full rounded-md border-0 py-1.5 pl-3 pr-10 ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600">
                <option>Low priority</option>
                <option>Medium priority</option>
                <option>High priority</option>
            </select>
        </div>
        <!-- Tabs at small breakpoint and up -->
        <div class="hidden sm:block" id="tabs">
            <nav class="-mb-px flex space-x-8">
                <!-- Current: "border-indigo-500 text-indigo-600", Default: "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700" -->
                <a href="#low-priority" class="tab border-indigo-500 text-indigo-600 whitespace-nowrap border-b-2 px-1 pb-4 text-sm font-medium" aria-current="page">Low priority</a>
                <a href="#medium-priority" class="tab border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 whitespace-nowrap border-b-2 px-1 pb-4 text-sm font-medium">Medium priority</a>
                <a href="#high-priority" class="tab border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 whitespace-nowrap border-b-2 px-1 pb-4 text-sm font-medium">High priority</a>
            </nav>
        </div>
    </div>
</div>


<!-- Content corresponding to each tab -->
<div class="mt-7" id="tab-content">
    <div class="flex flex-wrap" id="low-priority">
        <div class="flex-shrink-2 mr-4">
            <div class="inline-block mr-10">
                @Html.Partial("_postitElement")
            </div>
            <div class="inline-block">
                @Html.Partial("_postitElement")
            </div>

        </div>
    </div>
    <div id="medium-priority" class="hidden">Medium Priority Content</div>
    <div id="high-priority" class="hidden">High Priority Content</div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tabs = document.querySelectorAll(".tab");
        const tabContents = document.querySelectorAll("#tab-content > div");

        tabs.forEach((tab, index) => {
            tab.addEventListener("click", function (event) {
                event.preventDefault();

                // Remove active class from all tabs and add default styling
                tabs.forEach(tab => {
                    tab.classList.remove("border-indigo-500", "text-indigo-600");
                    tab.classList.add("border-transparent", "text-gray-500", "hover:border-gray-300", "hover:text-gray-700");
                });

                // Add active styling to clicked tab
                tab.classList.remove("border-transparent", "text-gray-500", "hover:border-gray-300", "hover:text-gray-700");
                tab.classList.add("border-indigo-500", "text-indigo-600");

                // Hide all tab contents
                tabContents.forEach(content => content.classList.add("hidden"));
                // Show corresponding tab content
                tabContents[index].classList.remove("hidden");
            });
        });
        // Get references to the button and the container for the partial
        const openModalButton = document.getElementById("openModalButton");
      const modal = document.getElementById("modal");
      const closeModalButton = document.getElementById("closeModalButton");

      // Add click event listener to the button to open the modal
      openModalButton.addEventListener("click", function() {
        modal.classList.remove("hidden");
        modal.classList.add("flex");
         
      });

      // Add click event listener to the close button to close the modal
      closeModalButton.addEventListener("click", function() {
        modal.classList.remove("flex");
        modal.classList.add("hidden");
      });

    });
</script>

