@model ParentViewModel


<!-- component -->
@{
    ViewData["Title"] = "Create";
    var tenantid = @User.FindFirst("http://schemas.microsoft.com/identity/claims/tenantid")?.Value;
}


<div id="modal" class="inset-0 fixed z-50 flex hidden items-center justify-center overflow-y-auto">

    <div class="inset-0 fixed transition-opacity" aria-hidden="true">
        <div class="inset-0 bg-gray-500 absolute opacity-75"></div>
    </div>
    <div class="bg-white transform overflow-hidden rounded-lg shadow-xl transition-all sm:max-w-lg sm:w-full">
        <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
            <div class="sm:flex sm:items-start">
                <div class="mt-3 w-full text-center sm:mt-0 sm:ml-4 sm:text-left">
                    <h3 class="text-gray-900 text-lg font-medium leading-6" id="modalTitle">
                        Create Task
                    </h3>
                    <form asp-controller="Employee" asp-action="Create" method="post" class="mt-4">
                        

                        <div class="py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                            <button onclick="toggleModal()" id="closeModalButton" type="button" class="border-transparent px-4 py-2 bg-indigo-600 text-white inline-flex w-full justify-center rounded-md border text-base font-medium shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm">
                                Close
                            </button>
                            <button id="createTaskButton" type="submit" class="border-transparent px-4 py-2 bg-indigo-600 text-white inline-flex w-full justify-center rounded-md border text-base font-medium shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm">
                                Create Task
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>
</div>



<div class="flex justify-between">
    <h1 class="text-gray-900 mr-3 mt-4 text-base font-semibold leading-6">Users</h1>
    <div class="inline-block">
        <button onclick="toggleModal()" class="bg-blue-500 text-white px-3 py-2 my-2 mx-2 flex items-center rounded-lg text-center text-sm font-semibold hover:bg-blue-600">
            Create New Role <i class="fab fa-facebook ml-1"></i>
            <svg xmlns="http://www.w3.org/2000/svg" class="fill-current text-white" width="30" height="30" viewBox="0 0 24 24">
                <path d="M12,2C6.477,2,2,6.477,2,12s4.477,10,10,10s10-4.477,10-10S17.523,2,12,2z M17,13h-4v4h-2v-4H7v-2h4V7h2v4h4V13z"></path>
            </svg>
        </button>
    </div>
</div>
<div class="border-gray-200 pb-5 mb-3 border-b sm:flex sm:items-center sm:justify-between"></div>
<div class="px-3 py-4 flex justify-center">

    <table class="text-md bg-white mb-4 border-gray-100 w-full rounded border shadow-md">
        <tbody>
            <tr class="border-b">
                <th class="p-3 px-5 text-left">Name</th>
                <th class="p-3 px-5 text-left">Email</th>
                <th class="p-3 px-5 text-left">Role</th>



                <th></th>
            </tr>


            @foreach (var item in Model.Users)
            {
                <tr class="border-b hover:bg-gray-100">
                    <td class="p-3 px-5">
                        <input type="text" value="@item.fullname" class="bg-transparent border-gray-300 py-2 border-b-2 border-l-0 border-r-0 border-t-0">
                    </td>
                    <td class="p-3 px-5">
                        <input type="text" value="@item.email" class="bg-transparent border-gray-300 py-2 w-100 border-b-2 border-l-0 border-r-0 border-t-0">
                    </td>
                    <td class="p-3 px-5">
                        <form id="assignRoleForm_@item.id"  method="post" action="@Url.Action("SaveUserRole", "Users")">
                            <input type="hidden" name="userId" value="@item.id">
                            <div class="flex justify-between">
                            <select name="roleId" id="roleSelect_@item.id" class="bg-transparent border-gray-300 py-2 border-b-2 border-l-0 border-r-0 border-t-0 hover:cursor-pointer">
                                @foreach (var role in Model.Roles)
                                {
                                    if (role.id == item.role_id)
                                    {
                                        <option value="@role.id" selected>@role.title</option>
                                    }
                                    else
                                    {
                                        <option value="@role.id">@role.title</option>
                                    }
                                }
                            </select>
                                <div class="flex self-end">
                                    <button type="submit" class="mr-3 h-[40px] w-[75px] bg-blue-500 text-white py-1 px-2 rounded text-sm hover:bg-blue-700 focus:outline-none focus:shadow-outline">
                                        Save
                                    </button>
                                    <button type="button" class="bg-red-500 h-[40px] w-[75px] text-white py-1 px-2 rounded text-sm hover:bg-red-700 focus:outline-none focus:shadow-outline">
                                        Delete
                                    </button>
                                </div>
                            </div>

                        </form>

                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>
<div class="flex">
    <h3 class="text-gray-900 mr-3 mt-1 text-base font-semibold leading-6">Create Role</h3>

</div>
<script>

    function toggleModal() {
        modalCreateRole = document.getElementById('modal')

        modalCreateRole.classList.toggle('hidden')
    }

</script>